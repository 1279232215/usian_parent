2020-06-01
    1、redis缓存首页大广告
    2、缓存同步
    3、ElasticSearch介绍
        3.1、索引结构
        3.2、倒排索引
    4、ElasticSearch的安装
        4.1、环境的需求
        4.2、安装ES
        4.3、配置文件
        4.4、启动ES
        4.5、测试
    5、Kibana的介绍
    6、安装Kibana
    7、head的介绍
    8、安装head
    9、ES入门
        9.1、index的管理  创建  删除  修改
        9.2、mapping的管理  创建  查询  更新  删除
        9.3、document的管理  创建 post  put  查询  删除
    10、ES的读写原理
2020-06-02
    1、IK分词器
        1.1、两种模式  ik_smart   ik_max_word
        1.2、自定义词库
    2、field的详细介绍   就是怎么指定field的属性
        2.1、field的属性  type  analyzer   index   includes  excludes
        2.2、常用的field的类型  text  keyword  date  double
    3、springboot整合ElasticSearch
        3.1、ES客户端
        3.2、搭建工程
        3.3、索引管理
            3.3.1、创建索引
            3.3.2、删除索引
2020-06-03
    1、文档的管理
        1.1、添加文档
        1.2、批量添加
        1.3、修改文本
        1.4、删除文本
    2、文档搜索
        2.1、match_all查询  全部查询
        2.2、分页查询
        2.3、match查询  单条件查询
        2.4、multi_match查询   根据一个分词  查询多个字段
        2.5、boot查询   多条件查询
        2.6、filter查询  不需要计算相关度分数
        2.7、highlight查询  高光
2020-06-04
   1、商品搜索
        1.1、创建项目
            1.1.1、usian_search_service
            1.1.2、usian_search_feign
            1.1.3、usian_search_web
        1.2、导入商品数据到索引库
2020-06-05
    1、商品搜索的功能
    2、索引同步
        2.1、商品添加后做同步逻辑
2020-06-08
    问题：商品详情的查询,放在哪合适?
        如果直接查询mysql,访问量太大mysql可能会宕机
        如果用elasticSearch是不行的，应为elasticSearch是根据参数查询出一部分信息，而我们要做的事根据参数查询出一个商品信息(从海量数据中筛选出一部分数据)
        如果直接用redis把商品的数据全部存到redis中Redis会受不了，所以在添加的时候添加失效时间
    如果全部查询
    方案一：thymeleaf页面静态化
        1、创建商品详情的thymeleaf模板
        2、创建RabbitMQ消费者，收到消息后生成静态页面（D:/detail/26774635180.html）
        3、搭建nginx服务器，返回静态页面
    方案二：redis
      a、redis缓存商品详情
         1、先查询redis，如果有直接返回
         2、再查询mysql，并把查询结果装到redis中再返回

      b、如何保证redis不满？redis中都是热点商品？
        设置商品的实现时间：86400

      c、怎么保存商品信息（数据类型）？
        ITEM_INFO:123456:BASE
        ITEM_INFO:123456:DESC
        ITEM_INFO:123456:PARAM
        1、根据商品id查询商品基本信息
            1.1先从redis中查询
        2、索引同步
            2.1、商品添加后做同步逻辑
    任务：
        1、根据商品id对商品基本信息进行查询！！！
        2、根据商品id对商品描述信息进行查询！！！
        3、根据商品id对商品规格信息进行查询！！！
        4、当商品修改或者删除删除对应itemId的redis，进行同步
        5、优化redis
            5.1.缓存穿透
              缓存空对象：
                当存储层不命中后，即使返回的空对象也将其缓存起来，同时会设置一个过期时间（避免控制占用更多的存储空间），
                之后再访问这个数据将会从缓存中获取，保护了后端数据源；
            5.2.缓存击穿
                1. 设置热点数据永远不过期。(但是刚上的项目没有热点数据)
                2. 加分布式锁(setnx())



